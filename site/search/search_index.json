{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome To the Wiki This isn't for you, but you're free to use the information here. If something doesn't look right, let me know wm@chlf.dev What is this? It's a wiki! A collection of information. There may be no common theme, just anything that may seem useful. Where is this? It is not here nor there. It's built using MkDocs hotsed on GitHub Pages !","title":"Home"},{"location":"#welcome-to-the-wiki","text":"This isn't for you, but you're free to use the information here. If something doesn't look right, let me know wm@chlf.dev","title":"Welcome To the Wiki"},{"location":"#what-is-this","text":"It's a wiki! A collection of information. There may be no common theme, just anything that may seem useful.","title":"What is this?"},{"location":"#where-is-this","text":"It is not here nor there. It's built using MkDocs hotsed on GitHub Pages !","title":"Where is this?"},{"location":"mkdocs/","text":"MkDocs \"MkDocs is a fast, simple and downright gorgeous static site generator that's geared towards building project documentation. Documentation source files are written in Markdown, and configured with a single YAML configuration file.\" https://www.mkdocs.org/ Pre-Req Dependencies recent version of Python and pip Tip Ubuntu comes with a version of Python , so only pip needed to be installed. Check the version of Python installed with python --version . Installation $ pip install mkdocs Creating new Wiki $ mkdocs new <project-name> mkdocs will create a new project named <project-name> current directory. cd -ing into that directory shows the below starter structure. . |-- mkdocs.yml +-- docs/ | +-- index.md Configuration configuration is handled through the mkdocs.yml file, at first it'll look like site_name: MkDocs site_name is equivilant to the <title> tag in html, it defines the name of the website along with the heading that is displayed on page. Additional Useful Parameters site_url defines the url that the sites will be accessible by. nav defines the navigation on the site, each page is then listed in points nested under in a key-value style defining Name:pagefile.md Deployment For this site, it is deployed using GitHub Pages . Using the command $ mkdocs build mkdocs generates a site directory in the project root where resides the static rendering of the wiki. For best experience, the static site is pushed to it's own dedicated branch called gh-pages using git subtree push --prefix site origin gh-pages . This pushes only the site directory to the gh-pages branch. From GitHub repo, under Settings > Pages > Build and deployment we indicate we want the Source to be Deploy from a branch and the Branch to be gh-pages/(root) . A custom domain can also be configured tot his page. Note Custom domains will need to be verified via CNAME by GitHub before GitHub will accept it. Useful information about that can be found here .","title":"MkDocs"},{"location":"mkdocs/#mkdocs","text":"\"MkDocs is a fast, simple and downright gorgeous static site generator that's geared towards building project documentation. Documentation source files are written in Markdown, and configured with a single YAML configuration file.\" https://www.mkdocs.org/","title":"MkDocs"},{"location":"mkdocs/#pre-req","text":"","title":"Pre-Req"},{"location":"mkdocs/#dependencies","text":"recent version of Python and pip Tip Ubuntu comes with a version of Python , so only pip needed to be installed. Check the version of Python installed with python --version .","title":"Dependencies"},{"location":"mkdocs/#installation","text":"$ pip install mkdocs","title":"Installation"},{"location":"mkdocs/#creating-new-wiki","text":"$ mkdocs new <project-name> mkdocs will create a new project named <project-name> current directory. cd -ing into that directory shows the below starter structure. . |-- mkdocs.yml +-- docs/ | +-- index.md","title":"Creating new Wiki"},{"location":"mkdocs/#configuration","text":"configuration is handled through the mkdocs.yml file, at first it'll look like site_name: MkDocs site_name is equivilant to the <title> tag in html, it defines the name of the website along with the heading that is displayed on page. Additional Useful Parameters site_url defines the url that the sites will be accessible by. nav defines the navigation on the site, each page is then listed in points nested under in a key-value style defining Name:pagefile.md","title":"Configuration"},{"location":"mkdocs/#deployment","text":"For this site, it is deployed using GitHub Pages . Using the command $ mkdocs build mkdocs generates a site directory in the project root where resides the static rendering of the wiki. For best experience, the static site is pushed to it's own dedicated branch called gh-pages using git subtree push --prefix site origin gh-pages . This pushes only the site directory to the gh-pages branch. From GitHub repo, under Settings > Pages > Build and deployment we indicate we want the Source to be Deploy from a branch and the Branch to be gh-pages/(root) . A custom domain can also be configured tot his page. Note Custom domains will need to be verified via CNAME by GitHub before GitHub will accept it. Useful information about that can be found here .","title":"Deployment"}]}